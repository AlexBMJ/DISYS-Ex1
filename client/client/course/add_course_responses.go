// Code generated by go-swagger; DO NOT EDIT.

package course

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AddCourseReader is a Reader for the AddCourse structure.
type AddCourseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddCourseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddCourseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 405:
		result := NewAddCourseMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddCourseConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddCourseOK creates a AddCourseOK with default headers values
func NewAddCourseOK() *AddCourseOK {
	return &AddCourseOK{}
}

/* AddCourseOK describes a response with status code 200, with default header values.

Success
*/
type AddCourseOK struct {
}

func (o *AddCourseOK) Error() string {
	return fmt.Sprintf("[POST /course][%d] addCourseOK ", 200)
}

func (o *AddCourseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddCourseMethodNotAllowed creates a AddCourseMethodNotAllowed with default headers values
func NewAddCourseMethodNotAllowed() *AddCourseMethodNotAllowed {
	return &AddCourseMethodNotAllowed{}
}

/* AddCourseMethodNotAllowed describes a response with status code 405, with default header values.

Invalid input
*/
type AddCourseMethodNotAllowed struct {
}

func (o *AddCourseMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /course][%d] addCourseMethodNotAllowed ", 405)
}

func (o *AddCourseMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddCourseConflict creates a AddCourseConflict with default headers values
func NewAddCourseConflict() *AddCourseConflict {
	return &AddCourseConflict{}
}

/* AddCourseConflict describes a response with status code 409, with default header values.

Already exists
*/
type AddCourseConflict struct {
}

func (o *AddCourseConflict) Error() string {
	return fmt.Sprintf("[POST /course][%d] addCourseConflict ", 409)
}

func (o *AddCourseConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
