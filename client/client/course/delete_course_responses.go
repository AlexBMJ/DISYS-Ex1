// Code generated by go-swagger; DO NOT EDIT.

package course

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteCourseReader is a Reader for the DeleteCourse structure.
type DeleteCourseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCourseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewDeleteCourseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCourseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCourseBadRequest creates a DeleteCourseBadRequest with default headers values
func NewDeleteCourseBadRequest() *DeleteCourseBadRequest {
	return &DeleteCourseBadRequest{}
}

/* DeleteCourseBadRequest describes a response with status code 400, with default header values.

Invalid ID supplied
*/
type DeleteCourseBadRequest struct {
}

func (o *DeleteCourseBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /course/{courseId}][%d] deleteCourseBadRequest ", 400)
}

func (o *DeleteCourseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCourseNotFound creates a DeleteCourseNotFound with default headers values
func NewDeleteCourseNotFound() *DeleteCourseNotFound {
	return &DeleteCourseNotFound{}
}

/* DeleteCourseNotFound describes a response with status code 404, with default header values.

Course not found
*/
type DeleteCourseNotFound struct {
}

func (o *DeleteCourseNotFound) Error() string {
	return fmt.Sprintf("[DELETE /course/{courseId}][%d] deleteCourseNotFound ", 404)
}

func (o *DeleteCourseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
