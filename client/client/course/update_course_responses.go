// Code generated by go-swagger; DO NOT EDIT.

package course

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateCourseReader is a Reader for the UpdateCourse structure.
type UpdateCourseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCourseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCourseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCourseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCourseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateCourseMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateCourseOK creates a UpdateCourseOK with default headers values
func NewUpdateCourseOK() *UpdateCourseOK {
	return &UpdateCourseOK{}
}

/* UpdateCourseOK describes a response with status code 200, with default header values.

Success
*/
type UpdateCourseOK struct {
}

func (o *UpdateCourseOK) Error() string {
	return fmt.Sprintf("[PUT /course/{courseId}][%d] updateCourseOK ", 200)
}

func (o *UpdateCourseOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCourseBadRequest creates a UpdateCourseBadRequest with default headers values
func NewUpdateCourseBadRequest() *UpdateCourseBadRequest {
	return &UpdateCourseBadRequest{}
}

/* UpdateCourseBadRequest describes a response with status code 400, with default header values.

Invalid Course ID
*/
type UpdateCourseBadRequest struct {
}

func (o *UpdateCourseBadRequest) Error() string {
	return fmt.Sprintf("[PUT /course/{courseId}][%d] updateCourseBadRequest ", 400)
}

func (o *UpdateCourseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCourseNotFound creates a UpdateCourseNotFound with default headers values
func NewUpdateCourseNotFound() *UpdateCourseNotFound {
	return &UpdateCourseNotFound{}
}

/* UpdateCourseNotFound describes a response with status code 404, with default header values.

Course not found
*/
type UpdateCourseNotFound struct {
}

func (o *UpdateCourseNotFound) Error() string {
	return fmt.Sprintf("[PUT /course/{courseId}][%d] updateCourseNotFound ", 404)
}

func (o *UpdateCourseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCourseMethodNotAllowed creates a UpdateCourseMethodNotAllowed with default headers values
func NewUpdateCourseMethodNotAllowed() *UpdateCourseMethodNotAllowed {
	return &UpdateCourseMethodNotAllowed{}
}

/* UpdateCourseMethodNotAllowed describes a response with status code 405, with default header values.

Validation exception
*/
type UpdateCourseMethodNotAllowed struct {
}

func (o *UpdateCourseMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /course/{courseId}][%d] updateCourseMethodNotAllowed ", 405)
}

func (o *UpdateCourseMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
