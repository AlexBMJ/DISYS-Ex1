// Code generated by go-swagger; DO NOT EDIT.

package student

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewUploadStudentPhotoParams creates a new UploadStudentPhotoParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUploadStudentPhotoParams() *UploadStudentPhotoParams {
	return &UploadStudentPhotoParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUploadStudentPhotoParamsWithTimeout creates a new UploadStudentPhotoParams object
// with the ability to set a timeout on a request.
func NewUploadStudentPhotoParamsWithTimeout(timeout time.Duration) *UploadStudentPhotoParams {
	return &UploadStudentPhotoParams{
		timeout: timeout,
	}
}

// NewUploadStudentPhotoParamsWithContext creates a new UploadStudentPhotoParams object
// with the ability to set a context for a request.
func NewUploadStudentPhotoParamsWithContext(ctx context.Context) *UploadStudentPhotoParams {
	return &UploadStudentPhotoParams{
		Context: ctx,
	}
}

// NewUploadStudentPhotoParamsWithHTTPClient creates a new UploadStudentPhotoParams object
// with the ability to set a custom HTTPClient for a request.
func NewUploadStudentPhotoParamsWithHTTPClient(client *http.Client) *UploadStudentPhotoParams {
	return &UploadStudentPhotoParams{
		HTTPClient: client,
	}
}

/* UploadStudentPhotoParams contains all the parameters to send to the API endpoint
   for the upload student photo operation.

   Typically these are written to a http.Request.
*/
type UploadStudentPhotoParams struct {

	/* AdditionalMetadata.

	   Additional data to pass to server
	*/
	AdditionalMetadata *string

	/* File.

	   file to upload
	*/
	File runtime.NamedReadCloser

	/* StudentID.

	   ID of student to update

	   Format: int64
	*/
	StudentID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the upload student photo params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadStudentPhotoParams) WithDefaults() *UploadStudentPhotoParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the upload student photo params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadStudentPhotoParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the upload student photo params
func (o *UploadStudentPhotoParams) WithTimeout(timeout time.Duration) *UploadStudentPhotoParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upload student photo params
func (o *UploadStudentPhotoParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upload student photo params
func (o *UploadStudentPhotoParams) WithContext(ctx context.Context) *UploadStudentPhotoParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upload student photo params
func (o *UploadStudentPhotoParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upload student photo params
func (o *UploadStudentPhotoParams) WithHTTPClient(client *http.Client) *UploadStudentPhotoParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upload student photo params
func (o *UploadStudentPhotoParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAdditionalMetadata adds the additionalMetadata to the upload student photo params
func (o *UploadStudentPhotoParams) WithAdditionalMetadata(additionalMetadata *string) *UploadStudentPhotoParams {
	o.SetAdditionalMetadata(additionalMetadata)
	return o
}

// SetAdditionalMetadata adds the additionalMetadata to the upload student photo params
func (o *UploadStudentPhotoParams) SetAdditionalMetadata(additionalMetadata *string) {
	o.AdditionalMetadata = additionalMetadata
}

// WithFile adds the file to the upload student photo params
func (o *UploadStudentPhotoParams) WithFile(file runtime.NamedReadCloser) *UploadStudentPhotoParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the upload student photo params
func (o *UploadStudentPhotoParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithStudentID adds the studentID to the upload student photo params
func (o *UploadStudentPhotoParams) WithStudentID(studentID int64) *UploadStudentPhotoParams {
	o.SetStudentID(studentID)
	return o
}

// SetStudentID adds the studentId to the upload student photo params
func (o *UploadStudentPhotoParams) SetStudentID(studentID int64) {
	o.StudentID = studentID
}

// WriteToRequest writes these params to a swagger request
func (o *UploadStudentPhotoParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AdditionalMetadata != nil {

		// form param additionalMetadata
		var frAdditionalMetadata string
		if o.AdditionalMetadata != nil {
			frAdditionalMetadata = *o.AdditionalMetadata
		}
		fAdditionalMetadata := frAdditionalMetadata
		if fAdditionalMetadata != "" {
			if err := r.SetFormParam("additionalMetadata", fAdditionalMetadata); err != nil {
				return err
			}
		}
	}

	if o.File != nil {

		if o.File != nil {
			// form file param file
			if err := r.SetFileParam("file", o.File); err != nil {
				return err
			}
		}
	}

	// path param studentId
	if err := r.SetPathParam("studentId", swag.FormatInt64(o.StudentID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
