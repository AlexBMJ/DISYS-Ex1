// Code generated by go-swagger; DO NOT EDIT.

package teacher

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AddTeacherReader is a Reader for the AddTeacher structure.
type AddTeacherReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTeacherReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddTeacherOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 405:
		result := NewAddTeacherMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddTeacherConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddTeacherOK creates a AddTeacherOK with default headers values
func NewAddTeacherOK() *AddTeacherOK {
	return &AddTeacherOK{}
}

/* AddTeacherOK describes a response with status code 200, with default header values.

Success
*/
type AddTeacherOK struct {
}

func (o *AddTeacherOK) Error() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherOK ", 200)
}

func (o *AddTeacherOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTeacherMethodNotAllowed creates a AddTeacherMethodNotAllowed with default headers values
func NewAddTeacherMethodNotAllowed() *AddTeacherMethodNotAllowed {
	return &AddTeacherMethodNotAllowed{}
}

/* AddTeacherMethodNotAllowed describes a response with status code 405, with default header values.

Invalid input
*/
type AddTeacherMethodNotAllowed struct {
}

func (o *AddTeacherMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherMethodNotAllowed ", 405)
}

func (o *AddTeacherMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTeacherConflict creates a AddTeacherConflict with default headers values
func NewAddTeacherConflict() *AddTeacherConflict {
	return &AddTeacherConflict{}
}

/* AddTeacherConflict describes a response with status code 409, with default header values.

Already exists
*/
type AddTeacherConflict struct {
}

func (o *AddTeacherConflict) Error() string {
	return fmt.Sprintf("[POST /teacher][%d] addTeacherConflict ", 409)
}

func (o *AddTeacherConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
